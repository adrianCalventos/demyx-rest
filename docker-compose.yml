version: '2'

services:
   db:
    image: mysql    
    container_name: mysql-container 
    ports:
      - '3306:3306'
    restart: always
    #Specify Environment Variables for mysql
    environment: 
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_PASSWORD: '${DB_PASS}'
      MYSQL_USER: "${DB_USER}"
      MYSQL_ROOT_PASSWORD: '${DB_PASS}'

      
    networks:
      - employee-mysql

     
   phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: my-php-myadmin
    ports:
      - "8082:80"
    restart: always    
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_USERNAME: "${DB_USER}"
      SPRING_DATASOURCE_PASSWORD: "${DB_PASS}"
    networks:
      - employee-mysql
  #Api  Service
   api:
    image: adriancalventos/backend
    container_name: backend
    build:
      context: .
      #Use the DockerFile in that Directory
      dockerfile: spring-boot-docker/Dockerfile
    #This Service Depends on the database service specifed above
    depends_on: 
      - db
    ports:
      - "8089:8089"
    restart: on-failure
    command: --no-cache
    #Specify Environment Variables for the Api Service 
    environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container:3306/${DB_NAME}?createDatabaseIfNotExist=true
        SPRING_DATASOURCE_USERNAME: "${DB_USER}"
        SPRING_DATASOURCE_PASSWORD: "${DB_PASS}" 
    networks:
      - employee-mysql  

   jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8081:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - ~/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
      
networks:
  employee-mysql: 
